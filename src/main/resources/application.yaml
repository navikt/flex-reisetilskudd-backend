server:
  port: 8080

spring:
  main.banner-mode: 'off'
  profiles:
    active: default
  flyway:
    enabled: true
  datasource:
    url: "jdbc:postgresql://${NAIS_DATABASE_FLEX_REISETILSKUDD_BACKEND_FLEX_REISETILSKUDD_DB_HOST}:${NAIS_DATABASE_FLEX_REISETILSKUDD_BACKEND_FLEX_REISETILSKUDD_DB_PORT}/${NAIS_DATABASE_FLEX_REISETILSKUDD_BACKEND_FLEX_REISETILSKUDD_DB_DATABASE}"
    username: ${NAIS_DATABASE_FLEX_REISETILSKUDD_BACKEND_FLEX_REISETILSKUDD_DB_USERNAME}
    password: ${NAIS_DATABASE_FLEX_REISETILSKUDD_BACKEND_FLEX_REISETILSKUDD_DB_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 3

management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: prometheus
    path-mapping.prometheus: /prometheus

logging.config: "classpath:logback.xml"

cronjob: "0 0 5 * * ?"

no.nav.security.jwt:
  issuer:
    selvbetjening:
      discoveryurl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
      accepted_audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE}
  client:
    registration:
      flex-fss-proxy-client-credentials:
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${FLEX_FSS_PROXY_AAD_CLIENT_ID}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
  client:
    registration.azure-ad:
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: ${FLEX_BUCKET_UPLOADER_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic

integration:
  flex-bucket-uploader:
    url: ${FLEX_BUCKET_UPLOADER_URL}
